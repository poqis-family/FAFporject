/*
 *   This file was generated by a tool.
 *   Do not edit it, otherwise the changes will be overwritten.
 */

using System;
using UnityEngine;
using System.Runtime.Serialization;
using System.Runtime.Serialization.Formatters.Binary;
using System.IO;
using WJExcelDataClass;

[Serializable]
public class DataManager //: SingletonTemplate<DataManager>
{
	public sdftt p_sdftt;
	public mmm p_mmm;
	public adtttt p_adtttt;
	public Maps1 p_Maps1;
	public Dialog1 p_Dialog1;
	public Characters p_Characters;
	public Sheet1 p_Sheet1;

	public sdfttItem GetSdfttItemByID(Int32 id)
	{
		sdfttItem t = null;
		p_sdftt.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogWarning("can't find the id " + id + " in sdftt");
		return t;
	}

	public mmmItem GetMmmItemByID(Int32 id)
	{
		mmmItem t = null;
		p_mmm.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogWarning("can't find the id " + id + " in mmm");
		return t;
	}

	public adttttItem GetAdttttItemByID(Int32 id)
	{
		adttttItem t = null;
		p_adtttt.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogWarning("can't find the id " + id + " in adtttt");
		return t;
	}

	public Maps1Item GetMaps1ItemByID(Int32 id)
	{
		Maps1Item t = null;
		p_Maps1.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogWarning("can't find the id " + id + " in Maps1");
		return t;
	}

	public Dialog1Item GetDialog1ItemByID(Int32 id)
	{
		Dialog1Item t = null;
		p_Dialog1.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogWarning("can't find the id " + id + " in Dialog1");
		return t;
	}

	public CharactersItem GetCharactersItemByID(Int32 id)
	{
		CharactersItem t = null;
		p_Characters.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogWarning("can't find the id " + id + " in Characters");
		return t;
	}

	public Sheet1Item GetSheet1ItemByID(Int32 id)
	{
		Sheet1Item t = null;
		p_Sheet1.Dict.TryGetValue(id, out t);
		if (t == null) Debug.LogWarning("can't find the id " + id + " in Sheet1");
		return t;
	}

	public void LoadAll()
	{
		p_sdftt = Load("sdftt") as sdftt;
		p_mmm = Load("mmm") as mmm;
		p_adtttt = Load("adtttt") as adtttt;
		p_Maps1 = Load("Maps1") as Maps1;
		p_Dialog1 = Load("Dialog1") as Dialog1;
		p_Characters = Load("Characters") as Characters;
		p_Sheet1 = Load("Sheet1") as Sheet1;
	}

	private System.Object Load(string name)
	{
		IFormatter f = new BinaryFormatter();
		TextAsset text = Resources.Load<TextAsset>("BinConfigData/" + name);
		Stream s = new MemoryStream(text.bytes);
		System.Object obj = f.Deserialize(s);
		s.Close();
		return obj;
	}
}

